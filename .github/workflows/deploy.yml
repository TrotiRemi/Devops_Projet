name: Deploy Dash App

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout du code
      uses: actions/checkout@v3

    - name: Connexion à DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build de l’image Docker
      run: docker build -t locquetr123/dash-app:latest .

    - name: Push de l’image Docker
      run: docker push locquetr123/dash-app:latest

    - name: Configurer AWS CLI
      run: |
        aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws configure set default.region us-east-1

    - name: Vérifier et stopper les instances EC2 si elles existent déjà
      run: |
        INSTANCE_IDS=$(aws ec2 describe-instances --filters "Name=instance-state-name,Values=running" \
        --query "Reservations[].Instances[].InstanceId" --output text)

        if [ -n "$INSTANCE_IDS" ]; then
          echo "Arrêt des instances EC2 en cours..."
          aws ec2 stop-instances --instance-ids $INSTANCE_IDS
        else
          echo "Aucune instance en cours d'exécution."
        fi

    - name: Configurer Kubernetes avec AWS EKS
      run: aws eks --region us-east-1 update-kubeconfig --name devops-cluster

    - name: Déployer MongoDB, Elasticsearch et l'application Dash sur Kubernetes
      run: |
        kubectl apply -f kubernetes/mongodb-deployment.yaml
        kubectl apply -f kubernetes/elasticsearch-deployment.yaml
        kubectl apply -f kubernetes/app-deployment.yaml

    - name: Vérifier l'état des pods
      run: kubectl get pods -o wide

    - name: Vérifier l'état des services
      run: kubectl get services -o wide
